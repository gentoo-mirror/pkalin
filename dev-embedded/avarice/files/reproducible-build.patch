Description: Reproducible builds: Remove usage of __DATE__ and __TIME__
Author: Tobias Frost <tobi@debian.org>
Forwarded: no, Debian specific
Last-Update: 2015-06-16
Gentoo-redif: Kalin KOZHUHAROV <kalin@thinrope.net>
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/src/main.cc
+++ b/src/main.cc
@@ -362,8 +362,8 @@
     unsigned int bits_before = 0;
     unsigned int bits_after = 0;
 
-    statusOut("AVaRICE version %s, %s %s\n\n",
-	      PACKAGE_VERSION, __DATE__, __TIME__);
+    statusOut("AVaRICE version %s\n\n",
+	      PACKAGE_VERSION);
 
     device_name = 0;
 
@@ -670,7 +670,7 @@
             if( (program) || (verify))
             {
 #if ENABLE_TARGET_PROGRAMMING
-                fprintf(stderr, 
+                fprintf(stderr,
                    "\nERROR: Filename not specified."
                    " Use the --file option.\n");
                 throw jtag_exception();
--- a/src/remote.cc
+++ b/src/remote.cc
@@ -164,7 +164,7 @@
     }
 
     return (int)c;
-}    
+}
 
 static const unsigned char hexchars[] = "0123456789abcdef";
 
@@ -435,7 +435,7 @@
     if (theJtagICE->codeBreakpointAt(newPC))
 	return true;
     // assume interrupt when PC goes into interrupt table
-    if (ignoreInterrupts && newPC < theJtagICE->deviceDef->vectors_end) 
+    if (ignoreInterrupts && newPC < theJtagICE->deviceDef->vectors_end)
 	return handleInterrupt();
 
     return true;
@@ -865,7 +865,7 @@
 
         // Read in SPL SPH SREG
         jtagBuffer = theJtagICE->jtagRead(theJtagICE->statusAreaAddress(), 0x03);
-     
+
         if (jtagBuffer)
         {
             // We have SPL SPH SREG and need SREG SPL SPH
@@ -940,7 +940,7 @@
                 {
                     // Request for a sequence of io registers
                     int offset;
-                    i = 0; 
+                    i = 0;
                     j = 0;
                     int count;
                     unsigned int addr;
@@ -982,7 +982,7 @@
 
                             for (count = 0; count < j; count++)
                             {
-                                if ((io_reg_defs[i+count].name == 0x00) 
+                                if ((io_reg_defs[i+count].name == 0x00)
                                     || (io_reg_defs[i+count].flags != 0x00)
                                     || (io_reg_defs[i+count].reg_addr != addr))
                                 {
@@ -990,14 +990,14 @@
                                 }
                                 addr++;
                             }
-								
+
                             if (count)
                             {
                                 // Read consecutive address io_registers
                                 jtagBuffer = theJtagICE->jtagRead(DATA_SPACE_ADDR_OFFSET +
                                                       io_reg_defs[i].reg_addr,
                                                       count);
-								
+
                                 if (jtagBuffer)
                                 {
                                     int k = 0;
